首先创建服务器套接字，然后启动并获取到端口号

死循环进行等待客户端连接客户端 当客户端连接时调用 accept 函数 得到客户端套接字的端口号
之后创建一个线程来处理这个连接（accept_request）

处理：
首先获取一行 HTTP 报文数据 包括  方法，URL，版本
提取出来时 GET 还是 POST 方法 如果是这两个方法以外的方法直接装载一个 501 报文返回

如果是 POST 方法，就需要 cgi 解析，改变标志位
如果是 GET 方法就要看 url 里面有没有查询参数，如果有就也需要 cgi 解析，改变标志位 这样起始行就解析完毕了

然后就需要根据 url 中的路径去找资源
如果路径只是一个目录那就默认为 index.html

否则就看这个路径存在不存在
不存在：把剩下的头信息读进来然后丢弃就可以了因为路径是无效的，之后返回一个 404 报文就好了
存在：根据之前的 cgi 标记判断是否需要进行 cgi 解析 

不需要：就是静态页面请求，直接返回文件就行
需要：执行 cgi 脚本

执行结束后 调用 close 关闭连接


CGI解析
如果是 GET 请求，就直接读取剩下的报文并且丢弃即可，因为在前面已经拿到了参数
如果是 POST 请求，就要继续读报文然后去找到 Content-Length字段的值（HTTP消息长度） 如果没找到这个字段就返回 400 报文告诉客户端请求有问题

如果都没有问题，返回 200 报文 然后创建管道准备开始进行 cgi 解析
具体流程是，首先 请求通过父进程进入内核进入子进程调用cgi解析然后返回给子进程返回内核返回父进程返回浏览器

所以此时需要判断当前进程是父进程还是子进程

如果是子进程就要关闭 output 的读和 input 的写
然后根据 CGI 标准将请求的方法存储到环境变量中，然后和 cgi 脚本交互，运行 cgi 程序

如果是父进程就关闭 output的写和input 的读 
之后 如果是 POST 就根据之前的 Content-Length 读取并发送给 CGI

然后等待cgi返回数据即可，将数据发送给浏览器渲染